<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE entry SYSTEM "SamplesInfo.dtd">
<entry>
    <name>JPEG encode/decode and resize with NPP</name>
    <description><![CDATA[This sample demonstrates a simple image processing pipline. First, a JPEG file is huffman decoded and inverse DCT transformed and dequantized. Then the different plances are resized. Finally, the resized image is quantized, forward DCT transformed and huffman encoded.]]></description>
    <whitepaper></whitepaper>
    <supported_sm_architectures>
        <include>all</include>
    </supported_sm_architectures>
    <keywords>CUDA,NPP,JPEG,Image Processing,Image Compression</keywords>
    <scope>1:CUDA Basic Topics,1:Performance Strategies,2:Computer Vision</scope>
    <files>
        <file>..\..\common\data\Growth_of_cubic_bacteria_25x16.jpg</file>
    </files>
    <cudaapi>nppGetGpuComputeCapability</cudaapi>
    <cudaapi>nppiDCTInitAlloc</cudaapi>
    <cudaapi>nppiDecodeHuffmanScanHost_JPEG_8u16s_P3R</cudaapi>
    <cudaapi>nppiDCTQuantInv8x8LS_JPEG_16s8u_C1R_NEW</cudaapi>
    <cudaapi>nppiResizeSqrPixel_8u_C1R</cudaapi>
    <cudaapi>nppiEncodeHuffmanGetSize</cudaapi>
    <cudaapi>nppiDCTFree</cudaapi>
    <library>nppi</library>
    <library>nppc</library>
    <library>freeimage</library>
    <library-path os="macosx">../common/FreeImage/lib/darwin</library-path>
    <library-path os="linux" arch="x86_64">../common/FreeImage/lib/linux/x86_64</library-path>
    <library-path os="linux" arch="i686">../common/FreeImage/lib/linux/i686</library-path>
    <include-path>./</include-path>
    <include-path>../</include-path>
    <include-path>../../common/inc</include-path>
    <include-path>../common/UtilNPP</include-path>
    <include-path>../common/FreeImage/include</include-path>
    <devicecompilation>whole</devicecompilation>
    <sm-arch>sm20</sm-arch>
    <type>exe</type>
    <primary-file>jpegNPP.cpp</primary-file>
    <required_dependencies>
        <dependency>FreeImage</dependency>
        <dependency>NPP</dependency>
    </required_dependencies>
    <supported-env>linux:x86_64, linux:i686, windows7, macosx:x86_64, macosx:i686, :arm, linux:ppc64le</supported-env>
</entry>
