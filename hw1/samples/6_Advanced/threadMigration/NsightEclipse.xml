<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE entry SYSTEM "SamplesInfo.dtd">
<entry>
    <name>CUDA Context Thread Management</name>
    <description><![CDATA[Simple program illustrating how to the CUDA Context Management API and uses the new CUDA 4.0 parameter passing and CUDA launch API.  CUDA contexts can be created separately and attached independently to different threads.]]></description>
    <whitepaper></whitepaper>
    <supported_sm_architectures>
        <include>all</include>
    </supported_sm_architectures>
    <keywords>CUDA,GPGPU,threads</keywords>
    <scope>1:CUDA Basic Topics</scope>
    <files>
        <file>data\threadMigration_kernel32.ptx</file>
        <file>data\threadMigration_kernel64.ptx</file>
    </files>
    <cudaapi level="driver">cuCtxCreate</cudaapi>
    <cudaapi level="driver">cuCtxDestroy</cudaapi>
    <cudaapi level="driver">cuModuleLoad</cudaapi>
    <cudaapi level="driver">cuModuleLoadDataEx</cudaapi>
    <cudaapi level="driver">cuModuleGetFunction</cudaapi>
    <cudaapi level="driver">cuLaunchKernel</cudaapi>
    <cudaapi level="driver">cuMemcpyDtoH</cudaapi>
    <cudaapi level="driver">cuCtxPushCurrent</cudaapi>
    <cudaapi level="driver">cuCtxPopCurrent</cudaapi>
    <keyconcepts level="advanced">CUDA Driver API</keyconcepts>
    <library os="linux">cuda</library>
    <library os="windows">cuda</library>
    <library os="macosx" framework="true">CUDA</library>
    <library>cudart_static</library>
    <include-path>./</include-path>
    <include-path>../</include-path>
    <include-path>../../common/inc</include-path>
    <devicecompilation>whole</devicecompilation>
    <sm-arch>sm20</sm-arch>
    <type>exe</type>
    <primary-file>threadMigration.cpp</primary-file>
    <supported-env>linux:x86_64, linux:i686, windows7, macosx:x86_64, macosx:i686, :arm, linux:ppc64le</supported-env>
    <no-nsight-eclipse/>
</entry>
